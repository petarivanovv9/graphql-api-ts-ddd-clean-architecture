type Query {
  """Returns the current logged in user."""
  viewer: User!
}

type User {
  id: ID!
  name: String!
  email: String!
  account: Account!
}

type Account {
  id: ID!
  email: String!
  company: String
  vatNumber: String
  """Return the card payment profiles associated with the Account."""
  cardPaymentProfiles: [CardPaymentProfile!]!
}

type Mutation {
  deleteCardPaymentProfile(input: DeleteCardPaymentProfileInput!): DeleteCardPaymentProfilePayload
}

type CardPaymentProfile {
  id: ID!
  firstName: String
  lastName: String
}

input DeleteCardPaymentProfileInput {
  id: ID!
}

type DeleteCardPaymentProfilePayload {
  "Fake field so that we have a payload type for consistency."
  _noop: Boolean
}

schema {
  query: Query
  mutation: Mutation
}